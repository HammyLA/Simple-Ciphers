// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int              @id @default(autoincrement())
  email      String           @unique
  username   String           @unique
  password   String
  keys       Key[]
  statistics UserStatistics[]
}

model Key {
  id          Int      @id @default(autoincrement())
  key         String
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  dateCreated DateTime @default(now())
}

model UserStatistics {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  // Figure it out later
}

model GlobalStatistics {
  id                      Int @id @default(autoincrement())
  caesarEncryptions       Int @default(0)
  caesarDecryptions       Int @default(0)
  substitutionEncryptions Int @default(0)
  substitutionDecryptions Int @default(0)
  OTPEncryptions          Int @default(0)
  OTPDecryptions          Int @default(0)
  VigenereEncryptions     Int @default(0)
  VigenereDecryptions     Int @default(0)
  A51Encryptions          Int @default(0)
  A51Decryptions          Int @default(0)
  RC4Encryptions          Int @default(0)
  RC4Decryptions          Int @default(0)
  DESEncryptions          Int @default(0)
  DESDecryptions          Int @default(0)
  AESEncryptions          Int @default(0)
  AESDecryptions          Int @default(0)
  TEAEncryptions          Int @default(0)
  TEADecryptions          Int @default(0)
  // figure this out later
}
